Username:  rollers
Date:      Thu Oct 31 00:57:15 EDT 2019
 
***making assign2 ***
g++ assign2.o shortest.o -g -o assign2
--- Running ---
 
Constructor executing

Will start creating the graph
Please enter the number of vertices: 
You entered 5


Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 5

Enter the cost of the edge: 
Cost is: 5

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 2

Enter an integer from 1 to 5 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 2

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 2

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 2

Enter an integer from 1 to 5 for the child: 
You entered for the child: 1

Enter the cost of the edge: 
Cost is: 9

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 4

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 4

Enter an integer from 1 to 5 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 2

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 4

Enter an integer from 1 to 5 for the child: 
You entered for the child: 5

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 5

Enter an integer from 1 to 5 for the child: 
You entered for the child: 1

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 

Constructor checking the adjacency matrix
0	1	1000000	1	5
9	0	3	2	1000000
1000000	1000000	0	4	1000000
1000000	1000000	2	0	3
3	1000000	1000000	1000000	0

Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 2
Performing Floyd's

D=
0	1	3	1	4
8	0	3	2	5
10	11	0	4	7
6	7	2	0	3
3	4	6	4	0

P=
0	0	4	0	4
5	0	0	0	4
5	5	0	0	4
5	5	0	0	0
0	1	4	1	0

The paths

calling path 1 1

calling path 1 2

calling path 1 3
v4
calling path 1 4

calling path 1 5
v4
calling path 2 1
v4v5
calling path 2 2

calling path 2 3

calling path 2 4

calling path 2 5
v4
calling path 3 1
v4v5
calling path 3 2
v4v5v1
calling path 3 3

calling path 3 4

calling path 3 5
v4
calling path 4 1
v5
calling path 4 2
v5v1
calling path 4 3

calling path 4 4

calling path 4 5

calling path 5 1

calling path 5 2
v1
calling path 5 3
v1v4
calling path 5 4
v1
calling path 5 5

Floyd 2 Complete
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 1
calculating shortest path from 1 to all other vertices
Dijkstra complete F ...
V4 V5
V4 V3
V1 V4
V1 V2

Touch = 
2  1
3  4
4  1
5  4
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 3

Exiting
Deconstructor executing
--- Running again ---
 
Constructor executing

Will start creating the graph
Please enter the number of vertices: 
You entered 3


Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 3 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 3 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 8

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 3 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 3 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 5

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 3 for the parent: 
You entered for the parent: 2

Enter an integer from 1 to 3 for the child: 
You entered for the child: 1

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 3 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 3 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 2

Enter Y if you have a node to enter, N if you are done: 

Constructor checking the adjacency matrix
0	8	5
3	0	1000000
1000000	2	0

Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 2
Performing Floyd's

D=
0	7	5
3	0	8
5	2	0

P=
0	3	0
0	0	1
2	0	0

The paths

calling path 1 1

calling path 1 2
v3
calling path 1 3

calling path 2 1

calling path 2 2

calling path 2 3
v1
calling path 3 1
v2
calling path 3 2

calling path 3 3

Floyd 2 Complete
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 1
calculating shortest path from 1 to all other vertices
Dijkstra complete F ...
V3 V2
V1 V3

Touch = 
2  3
3  1
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 3

Exiting
Deconstructor executing
--- Running again---
 
Constructor executing

Will start creating the graph
Please enter the number of vertices: 
You entered 5


Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 7

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 4

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 6

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 5 for the child: 
You entered for the child: 5

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 5 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 2

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 5

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 4

Enter an integer from 1 to 5 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 5 for the parent: 
You entered for the parent: 5

Enter an integer from 1 to 5 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 

Constructor checking the adjacency matrix
0	7	4	6	1
1000000	0	1000000	1000000	1000000
1000000	2	0	5	1000000
1000000	3	1000000	0	1000000
1000000	1000000	1000000	1	0

Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 1
calculating shortest path from 1 to all other vertices
Dijkstra complete F ...
V4 V2
V1 V3
V5 V4
V1 V5

Touch = 
2  4
3  1
4  5
5  1
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 4
calculating shortest path from 4 to all other vertices
Dijkstra complete F ...
V4 V2

Touch = 
1  4
2  4
3  4
5  4
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 5
calculating shortest path from 5 to all other vertices
Dijkstra complete F ...
V4 V2
V5 V4

Touch = 
1  5
2  4
3  5
4  5
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 3
calculating shortest path from 3 to all other vertices
Dijkstra complete F ...
V3 V4
V3 V2

Touch = 
1  3
2  3
4  3
5  3
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 3

Exiting
Deconstructor executing
--- Running again---
 
Constructor executing

Will start creating the graph
Please enter the number of vertices: 
You entered 4


Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 4 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 8

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 1

Enter an integer from 1 to 4 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 2

Enter an integer from 1 to 4 for the child: 
You entered for the child: 3

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 4 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 2

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 3

Enter an integer from 1 to 4 for the child: 
You entered for the child: 4

Enter the cost of the edge: 
Cost is: 1

Enter Y if you have a node to enter, N if you are done: 
Enter an integer from 1 to 4 for the parent: 
You entered for the parent: 4

Enter an integer from 1 to 4 for the child: 
You entered for the child: 2

Enter the cost of the edge: 
Cost is: 3

Enter Y if you have a node to enter, N if you are done: 

Constructor checking the adjacency matrix
0	8	1	1000000
1000000	0	3	1000000
1000000	2	0	1
1000000	3	1000000	0

Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 1
Enter for Dijkstra: You entered 1
calculating shortest path from 1 to all other vertices
Dijkstra complete F ...
V3 V2
V3 V4
V1 V3

Touch = 
2  3
3  1
4  3
Enter 1: Dijkstra's shortest path
Enter 2: Floyd's shortest path
Enter 3: Exit

You entered: 3

Exiting
Deconstructor executing
 
